<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Design on Synthetic Yeast 2.0</title><link>https://syntheticyeast.github.io/design/</link><description>Recent content in Design on Synthetic Yeast 2.0</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://syntheticyeast.github.io/design/index.xml" rel="self" type="application/rss+xml"/><item><title>Alterations</title><link>https://syntheticyeast.github.io/design/alterations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://syntheticyeast.github.io/design/alterations/</guid><description>We will introduce rather conservative changes to the genome sequence, initially deleting or relocating genomic features using strategies we feel, from first principles, are unlikely to reduce fitness significantly. At the same time, we will be introducing site-specific recombination sequences, allowing subsequent in vitro evolution of the yeast strains generated. This opens up a whole new dimension – not just one synthetic genome, but whole populations of synthetic genomes will be available for analysis and future study.</description></item><item><title>Methodology</title><link>https://syntheticyeast.github.io/design/methodology/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://syntheticyeast.github.io/design/methodology/</guid><description>The strategy to build the Sc2.0 genome is based on a hierarchical assembly plan devised specifically for this project. Building blocks (~750bp) are assembled into minichunks (~3kb), which are assembled into into chunks (~10kb), which are subsequently assembled into megachunks (30-50kb) that can finally be introduced into yeast to replace the corresponding wild type sequence.
Here we will describe the design and workflow associated with assembling chunks into megachunks and yeast transformation.</description></item><item><title>Phenotype Monitoring</title><link>https://syntheticyeast.github.io/design/phenotypemonitoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://syntheticyeast.github.io/design/phenotypemonitoring/</guid><description>We use haploid strains allowing simple growth (fitness) tests to be performed after each cycle of incorporating a synthetic segment. A straightforward and relatively sensitive way for us to monitor fitness on an ongoing basis is to examine colony size when the strain is plated out on the appropriate selective and non-selective media and compared to the parental strain(s). However, while this method will readily identify instances in which alterations lead to relatively major fitness defects, minor fitness defects may not be detected and certainly the spectrum of growth conditions examined will be small.</description></item><item><title>Principles</title><link>https://syntheticyeast.github.io/design/principles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://syntheticyeast.github.io/design/principles/</guid><description>Planned alterations to native chromosome sequence are potentially infinite in number and so a great deal of thought must be given to the specific alterations to be incorporated into the synthetic chromosome(s). In general, we are making modest changes predicted to have minimal or no impact on fitness of the organism under laboratory conditions.
The synthetic DNA encoding the designer changes are introduced in a stepwise, “bottom up” approach. The advantage here is that the “investment” made in the project at any given stage is limited to 30-60kb, so if a particular segment is incompatible with viability, or gives rise to a slow-growth phenotype, the segment can be re-synthesized after the nature of the growth defect is mapped and diagnosed (by singly transforming in the 10kb pieces, or by mapping which segments of a given 30-60 kb “megachunk” are incorporated during transformation [PCRTags].</description></item></channel></rss>